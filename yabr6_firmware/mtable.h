//ENTRY(ID,  var,              rightshift,       resolution, unit,  name,                        minvalue,    maxvalue  )

ENTRY('1', stp.getSpeed(),              0,       0.0001,    "",     "spd 1",                     -10000.0,     10000.0  )
ENTRY('2', stp2.getSpeed(),             0,       0.0001,    "",     "spd 2",                     -10000.0,     10000.0  )
ENTRY('3', sensorData.voltage,          0,       0.001,    "V",     "adc",                            0.0,        20.0  )
ENTRY('4', sensorData.dist[0],          0,       1.92,    "cm",     "distance 1",                     0.0,       400.0  )
ENTRY('5', sensorData.dist[1],          0,       1.92,    "cm",     "distance 2",                     0.0,       400.0  )
ENTRY('6', sensorData.dist[2],          0,       1.92,    "cm",     "distance 3",                     0.0,       400.0  )
ENTRY('7', sensorData.acX,              0,       1,         "",     "AcX",                       -30000.0,     30000.0  )
ENTRY('8', sensorData.acY,              0,       1,         "",     "AcY",                       -30000.0,     30000.0  )
ENTRY('9', sensorData.acZ,              0,       1,         "",     "AcZ",                       -30000.0,     30000.0  )
ENTRY('0', sensorData.gyX,              0,       1,         "",     "GyX",                       -30000.0,     30000.0  )
ENTRY('q', sensorData.gyY,              0,       1,         "",     "GyY",                       -30000.0,     30000.0  )
ENTRY('w', sensorData.gyZ,              0,       1,         "",     "GyZ",                       -30000.0,     30000.0  )
ENTRY('e', sensorData.cpu[0],           0,       0.1,      "%",     "cpu load 0",                     0.0,       100.0  )
ENTRY('r', sensorData.cpu[1],           0,       0.1,      "%",     "cpu load 1",                     0.0,       100.0  )
ENTRY('t', sensorData.cpu[2],           0,       0.1,      "%",     "cpu load 2",                     0.0,       100.0  )
ENTRY('z', sensorData.cpu[3],           0,       0.1,      "%",     "cpu load 3",                     0.0,       100.0  )
ENTRY('u', sensorData.cpu[4],           0,       0.1,      "%",     "cpu load 4",                     0.0,       100.0  )
ENTRY('i', attitude.angleAcc,           0,       0.0001,   "°",     "angle acc",                   -100.0,       100.0  )
ENTRY('o', attitude.angleGyro,          0,       0.0001,   "°",     "angle gyro",                  -100.0,       100.0  )
ENTRY('p', attitude.angleFused,         0,       0.0001,   "°",     "angle fused",                 -100.0,       100.0  )
ENTRY('a', sensorOffsets.angleRate,     0,       1,         "",     "sensor offset angle rate",    -100.0,       100.0  )
ENTRY('s', controlState.targetSpeed,    0,       1,         "",     "cs targetSpeed",            -30000.0,     30000.0  )
ENTRY('d', controlState.currentSpeed,   0,       1,         "",     "cs currentSpeed",           -30000.0,     30000.0  )
ENTRY('f', controlState.speedDeviation, 0,       1,         "",     "cs speedDeviation",         -30000.0,     30000.0  )
ENTRY('g', controlState.iPartSpeed,     0,       1,         "",     "cs iPartSpeed",             -30000.0,     30000.0  )
ENTRY('h', controlState.pPartSpeed,     0,       1,         "",     "cs pPartSpeed",             -30000.0,     30000.0  )
ENTRY('j', controlState.targetAngle,    0,       1,         "",     "cs targetAngle",            -30000.0,     30000.0  )
ENTRY('k', controlState.angleDeviation, 0,       1,         "",     "cs angleDeviation",         -30000.0,     30000.0  )
ENTRY('l', controlState.pPartAngle,     0,       1,         "",     "cs pPartAngle",             -30000.0,     30000.0  )
ENTRY('y', controlState.dPartAngle,     0,       1,         "",     "cs dPartAngle",             -30000.0,     30000.0  )
ENTRY('x', controlState.acc,            0,       1,         "",     "cs acc",                    -30000.0,     30000.0  )
ENTRY('c', controlState.dAcc,           0,       1,         "",     "cs dAcc",                   -30000.0,     30000.0  )
ENTRY('v', controlState.movement,       0,       1,         "",     "cs movement",                    0.0,      3000.0  )
ENTRY(0,   sensorData.voltage,          0,       0.0,      "-",     "Ende der Tabelle",               0.0,         0.0  )
